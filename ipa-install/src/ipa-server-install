#! /usr/bin/python -E
# Authors: Karl MacMillan <kmacmillan@mentalrootkit.com>
#
# Copyright (C) 2007  Red Hat
# see file 'COPYING' for use and warranty information
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; version 2 only
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#


# requires the following packages:
# fedora-ds-base
# openldap-clients
# nss-tools

VERSION = "%prog .1"

import socket
import logging
from optparse import OptionParser
import ipa.dsinstance
import ipa.krbinstance

def parse_options():
    parser = OptionParser(version=VERSION)
    parser.add_option("-u", "--user", dest="ds_user",
                      help="ds user")
    parser.add_option("-r", "--realm", dest="realm_name",
                      help="realm name")
    parser.add_option("-p", "--password", dest="password",
                      help="admin password")
    parser.add_option("-m", "--master-password", dest="master_password",
                      help="kerberos master password")

    options, args = parser.parse_args()

    if not options.ds_user or not options.realm_name or not options.password or not options.master_password:
        parser.error("error: all options are required")

    return options

def main():
    logging.basicConfig(level=logging.DEBUG,
                        format='%(asctime)s %(levelname)s %(message)s',
                        filename='ipa-install.log',
                        filemode='w')

    options = parse_options()

    # check the hostname is correctly configured, it must be as the kldap
    # utilities just use the hostname as returned by gethostbyname to set
    # up some of the standard entries

    host_name = socket.gethostname()
    if len(host_name.split(".")) < 2:
        print "Invalid hostname <"+host_name+">"
        print "Check the /etc/hosts file and make sure to have a valid FQDN"
        return "-Fatal Error-"

    if socket.gethostbyname(host_name) == "127.0.0.1":
        print "The hostname resolves to the localhost address (127.0.0.1)"
        print "Please change your /etc/hosts file or your DNS so that the"
        print "hostname resolves to the ip address of your network interface."
        print "The KDC service does not listen on 127.0.0.1"
        return "-Fatal Error-"

    print "The Final KDC Host Name will be: " + host_name

    ds = ipa.dsinstance.DsInstance()
    ds.create_instance(options.ds_user, options.realm_name, host_name, options.password)

    krb = ipa.krbinstance.KrbInstance()
    krb.create_instance(options.ds_user, options.realm_name, host_name, options.password, options.master_password)

    #restart ds after the krb instance have add the sasl map and the ldap keytab
    ds.restart()

    return 0

main()
