[global]
# DATABASE

# no database for ipagui since everything is stored in LDAP

# IDENTITY

# Our our sqlobject-derived proxy provider
identity.provider='proxyprovider'

# the first thing checked on any request. We want to short-circuit this
# as early as possible
identity.source = 'visit'

# Turn on identity and visit (visit is required for identity)
identity.on=True
identity.failure_url="/loginfailed"
visit.on=True
visit.manager='proxyvisit'

# SERVER

server.environment="production"
autoreload.package="ipagui"
autoreload.on = False

# Sets the number of threads the server uses
server.thread_pool = 10

# if this is part of a larger site, you can set the path
# to the TurboGears instance here
# server.webpath=""

# Set to True if you are deploying your App behind a proxy
# e.g. Apache using mod_proxy
# base_url_filter.on = False

# Set to True if your proxy adds the x_forwarded_host header
# base_url_filter.use_x_forwarded_host = True

# If your proxy does not add the x_forwarded_host header, set
# the following to the *public* host url.
# (Note: This will be overridden by the use_x_forwarded_host option
# if it is set to True and the proxy adds the header correctly.
# base_url_filter.base_url = "http://www.example.com"

# Set to True if you'd like to abort execution if a controller gets an
# unexpected parameter. False by default
# tg.strict_parameters = False

# LOGGING
# Logging configuration generally follows the style of the standard
# Python logging module configuration. Note that when specifying
# log format messages, you need to use *() for formatting variables.
# Deployment independent log configuration is in ipagui/config/log.cfg
[logging]

[[handlers]]

[[[access_out]]]
# set the filename as the first argument below
args="('ipagui',)"
class='FileHandler'
level='INFO'
formatter='datestamped'

[[loggers]]
[[[ipagui]]]
level='ERROR'
qualname='ipagui'
handlers=['debug_out']

[[[access]]]
level='INFO'
qualname='turbogears.access'
handlers=['access_out']
propagate=0
